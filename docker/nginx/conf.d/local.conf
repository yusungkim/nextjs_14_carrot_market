upstream nextjs_app {
  server app:3000;
}

# https://docs.nginx.com/nginx/admin-guide/monitoring/logging/
log_format log_format_with_details '$remote_addr - $remote_user [$time_local] '
                                   'ssl=$ssl_protocol($ssl_cipher) '
                                   '"$request" $status $body_bytes_sent '
                                   '"$http_referer" "$http_user_agent" '
                                   'rt=$request_time uct="$upstream_connect_time" uht="$upstream_header_time" urt="$upstream_response_time"'
                                   ;

# excludes requests with HTTP status codes 2xx (Success) and 3xx (Redirection)
map $status $loggable_except_2xx_3xx {
    ~^[23]  0;
    default 1;
}

server {
    listen 80;
    server_name $SERVER_NAME;
    return 301 https://$host$request_uri;
}

server {
  # hide version
  server_tokens off;

  # No Index for search engines
  add_header X-Robots-Tag noindex;

  # security headers
  add_header Strict-Transport-Security 'max-age=15552000; includeSubDomains;';

  # define your domain
  listen 443 ssl;
  server_name $SERVER_NAME;

  # define the public application root
  root   $APP_ROOT/public;
  index  index.html;

  # define where Nginx should write its logs
  # access_log /dev/stdout log_format_with_details if=$loggable_except_2xx_3xx;
  access_log /dev/stdout log_format_with_details;
  error_log /dev/stdout;

  # ssl
  ssl_certificate       $SSL_CERTIFICATES/server.crt;
  ssl_certificate_key   $SSL_CERTIFICATES/server.key;

  # deny requests for files that should never be accessed
  location ~ /\. {
    deny all;
  }
  location ~* ^.+\.(ts|tsx|log|conf|env)$ {
    deny all;
  }

  # NextjsのHMRを使うための設定 (allow websocket connection to the app server)
  location /_next/webpack-hmr {
    proxy_pass http://nextjs_app/_next/webpack-hmr;
    proxy_http_version 1.1;
    access_log off;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }

  location ~ ^/_next/static/ {
    # root $APP_ROOT/public;
    access_log off;
    gzip_static on; # to serve pre-gzipped version
    proxy_pass http://nextjs_app;
    expires max;
    add_header Cache-Control public;
    add_header Last-Modified "";
    add_header ETag "";
    break;
  }

  # send non-static file requests to the app server
  location / {
    try_files $uri @app;
  }

  location @app {
    proxy_connect_timeout 70; # TCP接続確率タイムアウト, デフォルトは60秒
    proxy_send_timeout 70;    # リクエスト送信のタイムアウト, デフォルトは60秒
    proxy_read_timeout 70;   # レスポンス読み込みのタイムアウト, デフォルトは60秒
    proxy_set_header  X-Real-IP  $remote_addr;
    proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header  Host $http_host;
    proxy_set_header  X-Forwarded-Proto $scheme;
    proxy_set_header  X-Forwarded-Ssl on;
    proxy_set_header  X-Forwarded-Port $server_port;
    proxy_set_header  X-Forwarded-Host $host;
    proxy_redirect off;
    proxy_pass http://nextjs_app;
  }
}